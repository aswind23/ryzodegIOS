{"version":3,"sources":["app/users.js","app/pages.js","app/videos.js","app/app.js"],"names":[],"mappingsrpsfile":"public/js/app.js","sourcesContent":["var userModule = angular.module('userModule', ['ngRoute', 'ngStorage']);\r\nuserModule.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\r\n    $routeProvider.\r\n    // when('/activation', {\r\n    // \ttitle: 'Login',\r\n    // \ttemplateUrl: 'app/users/activation.html',\r\n    // \tcontroller: 'LoginController'\r\n    //  \t}).\r\n    when('/', {\r\n        title: 'Login',\r\n        templateUrl: 'app/users/login.html',\r\n        controller: 'LoginController'\r\n    }).\r\n    when('/otp', {\r\n        title: 'Enter OTP',\r\n        templateUrl: 'app/users/otp.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/language', {\r\n        title: 'Choose Language',\r\n        templateUrl: 'app/users/language.html',\r\n        controller: 'LoginController'\r\n    });\r\n}]);\r\nuserModule.factory('UserService', ['$window', '$http','$q','$location', '$rootScope', '$timeout', function($window, $http, $q, $location, $rootScope, $timeout) {\r\n    var service = {};\r\n    var baseApp = 'http://106.51.67.145:8080/novomix/';\r\n    service.getOtp = function(userReg, callback) {\r\n        var deferred = $q.defer();\r\n        $http({\r\n            method: 'POST',\r\n            url: baseApp + 'api/v1/rest/sendOtp?',\r\n            params:{\r\n                phoneNumber: userReg\r\n            }\r\n        }).success(function(data) {\r\n              callback(data);\r\n              deferred.resolve(data);\r\n        }).error(function(data) {\r\n              callback(data);\r\n              deferred.reject(data);\r\n        });\r\n    };\r\n    return service;\r\n}]);\r\nuserModule.controller('LoginController', ['$route', '$rootScope', '$scope', '$location', '$timeout', 'LanguageService', 'UserService', '$localStorage', 'ContentService', function($route, $rootScope, $scope, $location, $timeout, LanguageService, UserService, $localStorage, ContentService) {\r\n    $rootScope.my_data = {};\r\n\r\n    $rootScope.my_data.home = {};\r\n    $scope.userData = [];\r\n    $scope.loginText = 'Submit';\r\n    $scope.$storage = $localStorage;\r\n    if (angular.isDefined($scope.$storage.user)) {\r\n        $scope.getMobile = $scope.$storage.user[0].mobileNo.substr(3, 2);\r\n    }\r\n    var contentPromise = ContentService.getData($scope.$storage.lang);\r\n    contentPromise.then(function(response) {\r\n        $rootScope.my_data = response.data;\r\n    });\r\n    var langPromise = LanguageService.getData();\r\n    $scope.submitTextLang = \"Set Language\";\r\n    langPromise.then(function(response) {\r\n        $scope.languages = response.data;\r\n    });\r\n    // $scope.checkLanguage = function() {\r\n    //     if (!$scope.$storage.lang) {\r\n    //         $location.path('/language');\r\n    //     } else {\r\n    //         if ($scope.$storage.isLoggedIn) {\r\n    //             $location.path('/menu');\r\n    //         } else {\r\n    //             $location.path('/');\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // $scope.activate = function(code){\r\n    // \t$scope.isSending = true;\r\n    // \tif($scope.$storage.isLoggedIn){\r\n    // \t\t$rootScope.isLoggedIn = true;\r\n    // \t\t$location.path('/menu');\r\n    // \t}else{\r\n    // \t\t$scope.formErr = true;\r\n    // \t}\r\n    // };\t\r\n    $scope.userLogin = function() {\r\n        $scope.userData = []\r\n        $scope.loginText = 'Loading...';\r\n        UserService.getOtp($scope.mobileNumber, function(response) {\r\n           \r\n            if(response.status){\r\n                $scope.loginText = 'Submitted';\r\n                $scope.userData.push(response.data);\r\n                $scope.$storage.user = $scope.userData; \r\n                $scope.$storage.isLoggedIn = true;\r\n                $location.path('/otp'); \r\n            }else{\r\n                $scope.loginText = 'Failed.Try again.';\r\n            }\r\n        });\r\n        \r\n    };\r\n\r\n    $scope.setlanguage = function(lang) {\r\n        $scope.submitTextLang = \"Processing...\";\r\n        $timeout(function() {\r\n            $scope.$storage.lang = lang;\r\n            $location.path('/');\r\n        }, 1000);\r\n    };\r\n    $scope.otpSubmit = function() {\r\n        if ($scope.otpNum === $scope.$storage.user[0].otp) {\r\n            $location.path('/menu');\r\n        }else{\r\n            alert(\"OTP is wrong\");\r\n        }\r\n    }\r\n}]);","\"use strict\";\r\nvar pageModule = angular.module('pageModule', ['ngRoute', 'ngMap', 'ui.bootstrap', 'ngNumberPicker', 'ngStorage', 'ngAnimate']);\r\npageModule.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\r\n    $routeProvider.\r\n    when('/pages/not_found', {\r\n        title: 'Page Not Found',\r\n        templateUrl: 'app/pages/not_found.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/menu', {\r\n        title: 'Menu',\r\n        templateUrl: 'app/pages/menu.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/home', {\r\n        title: 'Home',\r\n        templateUrl: 'app/pages/home.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/languages', {\r\n        title: 'Language',\r\n        templateUrl: 'app/pages/languages.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/home_flexpen', {\r\n        title: 'How to use novomix flexpen',\r\n        templateUrl: 'app/pages/novomix_you_flexpen.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/home_novopen', {\r\n        title: 'How to use novopen',\r\n        templateUrl: 'app/pages/novomix_you_novopen.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/novomix_you', {\r\n        title: 'Novomix & You',\r\n        templateUrl: 'app/pages/novomix_you.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/novomix_you_detail', {\r\n        title: 'Novomix & You',\r\n        templateUrl: 'app/pages/novomix_you_detail.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/counselling', {\r\n        title: 'Counselling',\r\n        templateUrl: 'app/pages/counselling.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/counselling_detail', {\r\n        title: 'Counselling Detail',\r\n        templateUrl: 'app/pages/counselling_detail.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/know_more', {\r\n        title: 'Know More',\r\n        templateUrl: 'app/pages/know_more.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/pedometer', {\r\n        title: 'Pedometer',\r\n        templateUrl: 'app/pages/pedometer.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/reminder', {\r\n        title: 'Reminder Alarm',\r\n        templateUrl: 'app/pages/reminder.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/reports', {\r\n        title: 'Reports',\r\n        templateUrl: 'app/pages/reports.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/bmi_calculator', {\r\n        title: 'Reports',\r\n        templateUrl: 'app/pages/bmi_calculator.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/disclaimer', {\r\n        title: 'Disclaimer',\r\n        templateUrl: 'app/pages/disclaimer.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/copyright', {\r\n        title: 'Copyright',\r\n        templateUrl: 'app/pages/copyright.html',\r\n        controller: 'pageController'\r\n    }).when('/copyright', {\r\n        title: 'Copyright',\r\n        templateUrl: 'app/pages/copyright.html',\r\n        controller: 'pageController'\r\n    }).\r\n    when('/counselling_diet_charts/:name', {\r\n        title: 'Know More',\r\n        templateUrl: 'app/pages/diet_charts.html',\r\n        controller: 'pageController'\r\n    }).\r\n    otherwise({\r\n        redirectTo: '/'\r\n    });\r\n}]);\r\npageModule.factory('PageService', ['$window', '$http', '$q', '$location', '$localStorage', '$rootScope', '$timeout', function($window, $http, $q, $location, $localStorage, $rootScope, $timeout) {\r\n    var pageService = {};\r\n    var baseApp = 'http://106.51.67.145:8080/novomix/';\r\n    pageService.saveDailyRecord = function(dailyData, callback) {\r\n        var deferred = $q.defer();\r\n        $http({\r\n            method: 'POST',\r\n            data: dailyData,\r\n            url: baseApp + 'api/v1/rest/addDailyRecord?',\r\n            headers: {\r\n                'Authorization': $localStorage.user[0].token,\r\n                'Content-Type': 'application/json; charset=UTF-8'\r\n            }\r\n        }).success(function(data) {\r\n            callback(data);\r\n            deferred.resolve(data);\r\n        }).error(function(data) {\r\n            callback(data);\r\n            deferred.reject(data);\r\n        });\r\n    };\r\n    pageService.retrieveRecord = function(selectDate, callback){\r\n    \tvar deferred = $q.defer();\r\n        $http({\r\n            method: 'POST',\r\n            params: {\r\n            \tdate : selectDate\r\n            },\r\n            url: baseApp + 'api/v1/rest/getRecord',\r\n            headers: {\r\n                'Authorization': $localStorage.user[0].token\r\n            }\r\n        }).success(function(data) {\r\n            callback(data);\r\n            deferred.resolve(data);\r\n        }).error(function(data) {\r\n            callback(data);\r\n            deferred.reject(data);\r\n        });\r\n    }\r\n    return pageService;\r\n}]);\r\npageModule.controller('pageController', ['$route', '$scope', '$document', '$sce', '$http', '$location', '$rootScope', '$timeout', 'LanguageService', 'ContentService', 'PageService', '$localStorage', '$routeParams', function($route, $scope, $document, $sce, $http, $location, $rootScope, $timeout, LanguageService, ContentService, PageService, $localStorage, $routeParams) {\r\n    $rootScope.showMenu = false;\r\n    $scope.isBack = true;\r\n    $scope.isRendered = false;\r\n    $scope.Distance = { num: 0 };\r\n    $scope.Steps = { num: 0 };\r\n    $scope.Calories = { num: 0 };\r\n    $scope.Time_Duration = { num: 0 };\r\n    $scope.dailyBtn = 'Submit';\r\n    $scope.viewA1C = true;\r\n    $scope.viewEAG = false;\r\n\r\n    if ($location.path() === '/menu') {\r\n        $scope.pageName = 'menuPage';\r\n        $scope.isBack = false;\r\n    }\r\n\r\n    $scope.$storage = $localStorage;\r\n    $rootScope.user = {};\r\n    $rootScope.user.lang = $scope.$storage.lang || \"eng\";\r\n    $rootScope.islangMenu = false;\r\n    $scope.monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    $scope.daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    $scope.template = { 'menu': 'app/pages/menu.html', 'accmenu': 'app/pages/accmenu.html', 'header': 'app/pages/header.html', 'footer': 'app/pages/footer.html' };\r\n\r\n    var langPromise = LanguageService.getData();\r\n    langPromise.then(function(response) {\r\n        $scope.languages = response.data;\r\n    });\r\n\r\n    var contentPromise = ContentService.getData($rootScope.user.lang);\r\n    contentPromise.then(function(response) {\r\n        $rootScope.my_data = response.data;\r\n        if ($routeParams.name) {\r\n            $rootScope.zone = $rootScope.my_data.diet_charts[$routeParams.name];\r\n        }\r\n    });\r\n\r\n    $scope.openMenu = function() {\r\n        if ($rootScope.showMenu) {\r\n            $rootScope.showMenu = false;\r\n        } else {\r\n            $rootScope.showMenu = true;\r\n        }\r\n\r\n    }\r\n    $scope.openGoal = function() {\r\n        $scope.showGoal = true;\r\n    }\r\n\r\n    $scope.assignHeight = function() {\r\n        $scope.heightValue = [];\r\n        var initial = 150;\r\n        var end = 500;\r\n        for (var i = initial; i <= end; i++) {\r\n            $scope.heightValue.push(i);\r\n        }\r\n\r\n        $scope.assignWeight();\r\n    }\r\n    $scope.assignWeight = function() {\r\n        $scope.weightValue = [];\r\n        var initial = 30;\r\n        var end = 150;\r\n        for (var i = initial; i <= end; i++) {\r\n            $scope.weightValue.push(i);\r\n        }\r\n    }\r\n    $scope.bmiCalc = function(what, val) {\r\n        if (what === 'height') {\r\n            $scope.heightVal = val / 100;\r\n\r\n        } else if (what === 'weight') {\r\n            $scope.weightVal = val;\r\n        }\r\n        if ($scope.heightVal && $scope.weightVal) {\r\n            var getHeight = $scope.heightVal * $scope.heightVal;\r\n            $scope.bmiValue = $scope.weightVal / getHeight;\r\n            console.log($scope.weightVal, getHeight);\r\n        }\r\n    }\r\n    $scope.getLanguage = function(val) {\r\n        $rootScope.user.lang = val;\r\n        var contentPromise = ContentService.getData($rootScope.user.lang);\r\n        contentPromise.then(function(response) {\r\n            $rootScope.my_data = response.data;\r\n            if ($routeParams.name) {\r\n                $rootScope.zone = $rootScope.my_data.diet_charts[$routeParams.name];\r\n            }\r\n        });\r\n        $location.path('/menu');\r\n        $scope.$storage.lang = val;\r\n        //$rootScope.islangMenu = false;\r\n\r\n    };\r\n    $scope.openLanguage = function() {\r\n        $location.path('/languages');\r\n    }\r\n    $scope.myDataMenuIn = function() {\r\n        $rootScope.myMenu = true;\r\n    }\r\n    $scope.myDataMenuOut = function() {\r\n        $rootScope.myMenu = false;\r\n    }\r\n\r\n    function getAllDates(year, month) {\r\n        var currentYr = new Date().getFullYear();\r\n        var numDaysInMonth, daysInWeek, daysIndex, index, i, l, daysArray;\r\n        numDaysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        daysInWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        daysIndex = { 'Sun': 0, 'Mon': 1, 'Tue': 2, 'Wed': 3, 'Thu': 4, 'Fri': 5, 'Sat': 6 };\r\n        index = daysIndex[(new Date(year, month, 1)).toString().split(' ')[0]];\r\n        daysArray = [];\r\n\r\n        for (i = 0, l = numDaysInMonth[month]; i < l; i++) {\r\n            var getDate = ('0' + (i + 1)).slice(-2);\r\n            var getMonth = ('0' + (month + 1)).slice(-2);\r\n            var gather = {\r\n                date: getDate,\r\n                day: daysInWeek[index++].charAt(0),\r\n                dateFormat: getDate + '/' + getMonth + '/' + currentYr\r\n            };\r\n            daysArray.push(gather);\r\n            if (index == 7) index = 0;\r\n        }\r\n        return daysArray;\r\n    }\r\n    $scope.selectedDate = function(index, selected) {\r\n        var currentDate = ('0' + new Date().getDate()).slice(-2);\r\n        if (selected.date <= currentDate) {\r\n            $scope.activeDate = selected.date;\r\n        } else {\r\n\r\n        }\r\n        $scope.prevRecords(selected.dateFormat);\r\n    }\r\n    $scope.viewDates = function(month, selected) {\r\n        var currentYr = new Date().getFullYear();\r\n        var currentMonth = new Date().getMonth();\r\n\r\n        if (month <= currentMonth) {\r\n            $scope.getView = getAllDates(currentYr, month);\r\n            if (month === currentMonth) {\r\n                var currentIndex = ('0' + new Date().getDate()).slice(-2);\r\n                var currentDate = 0;\r\n                angular.forEach($scope.getView, function(data) {\r\n                    if (data.date == currentIndex) {\r\n                        currentDate = data;\r\n                    }\r\n                    return currentDate;\r\n                });\r\n                $scope.selectedDate(currentDate - 1, currentDate);\r\n\r\n            } else {\r\n                $scope.activeDate = '';\r\n            }\r\n            $scope.noDate = true;\r\n            $scope.activeMonth = selected;\r\n        }\r\n\r\n    }\r\n    $scope.getCurrentMonth = function() {\r\n        var currentYr = new Date().getFullYear();\r\n        var currentMonth = $scope.monthNames[new Date().getMonth()];\r\n        var currentDate = new Date().getDate();\r\n        $scope.activeMonth = currentMonth;\r\n        $scope.viewDates(new Date().getMonth(), currentMonth);\r\n    }\r\n    $scope.dailyRecord = function(before_breakfast, after_breakfast, pre_lunch, post_lunch, pre_dinner, post_dinner, bed_time, at_4_am) {\r\n        var currentYr = new Date().getFullYear();\r\n        var getSMonth = $scope.monthNames.indexOf($scope.activeMonth) + 1;\r\n        $scope.getScopeMonth = ('0' + getSMonth).slice(-2);\r\n        $scope.getScopeDate = ('0' + $scope.activeDate).slice(-2);\r\n        $scope.createdDate = $scope.getScopeDate + '/' + $scope.getScopeMonth + '/' + currentYr;\r\n        var dailyData = { beforeBrkfast: before_breakfast, nintyminAfterBrkfast: after_breakfast, preLunch: pre_lunch, postLunch: post_lunch, preDinner: pre_dinner, postDinner: post_dinner, bedTime: bed_time, atfourAM: at_4_am, createdDate: $scope.createdDate };\r\n        PageService.saveDailyRecord(dailyData, function(response) {\r\n            $scope.dailyBtn = \"loading...\";\r\n            if (response.status) {\r\n                $scope.dailyBtn = \"Submitted Successfully\";\r\n            } else {\r\n                $scope.dailyBtn = \"Failed Try Again\";\r\n            }\r\n            $timeout(function() {\r\n                $scope.dailyBtn = \"Submit\";\r\n            }, 1000);\r\n        });\r\n    }\r\n    $scope.prevRecords = function(date) {\r\n        PageService.retrieveRecord(date, function(response) {\r\n            if (response.data == null) {\r\n                $scope.at_4_am = '';\r\n                $scope.bed_time = '';\r\n                $scope.before_breakfast = '';\r\n                $scope.after_breakfast = '';\r\n                $scope.post_dinner = '';\r\n                $scope.post_lunch = '';\r\n                $scope.pre_dinner = '';\r\n                $scope.pre_lunch = '';\r\n            } else {\r\n                $scope.at_4_am = response.data.atfourAM;\r\n                $scope.bed_time = response.data.bedTime;\r\n                $scope.before_breakfast = response.data.beforeBrkfast;\r\n                $scope.after_breakfast = response.data.nintyminAfterBrkfast;\r\n                $scope.post_dinner = response.data.postDinner;\r\n                $scope.post_lunch = response.data.postLunch;\r\n                $scope.pre_dinner = response.data.preDinner;\r\n                $scope.pre_lunch = response.data.preLunch;\r\n            }\r\n        });\r\n    }\r\n    $scope.getA1c = function(eag) {\r\n        $scope.passA1c = 28.7 * (eag + 46.7);\r\n    }\r\n    $scope.geteAG = function(a1c) {\r\n        $scope.passeAG = 28.7 * (a1c - 46.7);\r\n    }\r\n    var accordion = $('uib-accordion'),\r\n        body = $('body'),\r\n        timeOut;\r\n    accordion.on('click', '.panel-heading', function(e) {\r\n        if ($('.panel-body').is(':visible')) {\r\n            $(\".panel-heading\").parent().removeClass('active');\r\n        } else {\r\n            $(this).parent().toggleClass('active');\r\n        }\r\n        e.preventDefault();\r\n    });\r\n    $('body').on('click', '.radioContainer #a1c', function() {\r\n        $('.eag').hide();\r\n        $('.a1c').show();\r\n    });\r\n    $('body').on('click', '.radioContainer #eag', function() {\r\n        $('.a1c').hide();\r\n        $('.eag').show();\r\n    });\r\n    $scope.fireEvent = function() {\r\n        $timeout(function() {\r\n            $scope.$broadcast('htmlRendered');\r\n        }, 0);\r\n    };\r\n\r\n    /*----------------------pedometer------------------------------*/\r\n     $scope.mapView = function() {\r\n        $scope.wayPoints = [];\r\n        var onOptions = { maximumAge: 3000, timeout: 5000, enableHighAccuracy: true };\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(function(position){\r\n                  $scope.locationPoint = [];\r\n                        var posLat = parseFloat(position.coords.latitude);\r\n                        var posLong = parseFloat(position.coords.longitude);\r\n                        var getOrg = {\r\n                            location : {\r\n                                lat: posLat, \r\n                                lng: posLong\r\n                            }       \r\n                        };\r\n                        $scope.wayPoints.push(getOrg);\r\n                        console.log($scope.wayPoints);\r\n                        $scope.origin = $scope.wayPoints[0].location;\r\n                        $scope.destination = $scope.wayPoints[$scope.wayPoints.length-1].location; \r\n                        $scope.current = $scope.wayPoints[$scope.wayPoints.length-1].location;   \r\n\r\n            },function(error){\r\n                console.log(error);\r\n            },onOptions);\r\n\r\n            $scope.startTrigger = function(){\r\n                $scope.wayPoints = [];\r\n                navigator.geolocation.watchPosition(function(position){  \r\n                        var posLat = parseFloat(position.coords.latitude);\r\n                        var posLong = parseFloat(position.coords.longitude);\r\n                        var getOrg = {\r\n                            location : {\r\n                                lat: posLat, \r\n                                lng: posLong\r\n                            }       \r\n                        };\r\n                        $scope.wayPoints.push(getOrg);\r\n                        console.log($scope.wayPoints);\r\n                        //$scope.distance = distance($scope.locationPoint[0].latitude, $scope.locationPoint[0].longitude,$scope.locationPoint[$scope.locationPoint.length-1].latitude, $scope.locationPoint[$scope.locationPoint.length-1].longitude);\r\n                        calsPerDay();\r\n                },function(error){\r\n                    console.log(error);\r\n                },onOptions);\r\n            };\r\n        }   \r\n        $scope.startPedometer = function() {\r\n            $scope.hideStart = true;\r\n            $scope.showPause = true;\r\n            $scope.startPedo = true;\r\n            $scope.startTrigger();\r\n        }\r\n        $scope.pausePedometer = function() {\r\n            $scope.showPause = false;\r\n            $scope.showResume = true;\r\n        }\r\n        $scope.resumePedometer = function() {\r\n            $scope.showPause = true;\r\n            $scope.showResume = false;\r\n\r\n        }\r\n        $scope.finishPedometer = function() {\r\n            $scope.hideResult = true;\r\n            $scope.showSummary = true;\r\n        }\r\n        function distance(lat1, lon1, lat2, lon2) {\r\n            console.log('hi');\r\n           var R = 6371; // km\r\n          var dLat = (lat2 - lat1).toRad();\r\n          var dLon = (lon2 - lon1).toRad(); \r\n          var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n                  Math.cos(lat1.toRad()) * Math.cos(lat2.toRad()) * \r\n                  Math.sin(dLon / 2) * Math.sin(dLon / 2); \r\n          var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)); \r\n          var d = R * c;\r\n          return d;\r\n        }\r\n        Number.prototype.toRad = function() {\r\n          return this * Math.PI / 180;\r\n        }\r\n         function calsPerDay() {\r\n          var age = 35;\r\n          var height = 178;\r\n          var weight = 78;\r\n          var result = 0\r\n          result = 66.47 + (13.75 * weight) + (5.0 * height - (6.75 * age));\r\n          return Math.round( result );\r\n        }\r\n    }\r\n    /*--------------Reminder Screen--------------------*/\r\n    $scope.reminderScreen = function() {\r\n        $scope.remindSubmitBtn = \"Submit\";\r\n        $scope.ismeridian = true;\r\n        $scope.hstep = 1;\r\n        $scope.mstep = 15;\r\n        $scope.options = {\r\n            hstep: [1, 2, 3],\r\n            mstep: [1, 5, 10, 15, 25, 30]\r\n        };\r\n        $scope.daysList = [{\r\n                name: 'Sunday',\r\n                short: 'Sun',\r\n                checked: false\r\n            },\r\n            {\r\n                name: 'Monday',\r\n                short: 'Mon',\r\n                checked: false\r\n            },\r\n            {\r\n                name: 'Tuesday',\r\n                short: 'Tue',\r\n                checked: false\r\n            },\r\n            {\r\n                name: 'Wednesday',\r\n                short: 'Wed',\r\n                checked: false\r\n            },\r\n            {\r\n                name: 'Thursday',\r\n                short: 'Thu',\r\n                checked: false\r\n            },\r\n            {\r\n                name: 'Friday',\r\n                short: 'Fri',\r\n                checked: false\r\n            },\r\n            {\r\n                name: 'Saturday',\r\n                short: 'Sat',\r\n                checked: false\r\n            }\r\n        ];\r\n\r\n        $scope.editDay = function(passTime) {\r\n            if (passTime == 0) {\r\n                var getShortDate = new Date().toString().split(' ')[0];\r\n                $scope.mytime = new Date();\r\n                angular.forEach($scope.daysList, function(day) {\r\n                    day.checked = false;\r\n                    if (day.short === getShortDate) {\r\n                        day.checked = true;\r\n                    }\r\n                });\r\n                // $scope.update = function() {\r\n                //     var d = new Date();\r\n                //     d.setHours(14);\r\n                //     d.setMinutes(0);\r\n                //     $scope.mytime = d;\r\n                // };\r\n            } else {\r\n                var getShortDate = passTime.alarmDays[0].short;\r\n                $scope.mytime = new Date(passTime.alarmTime);\r\n                angular.forEach($scope.daysList, function(day) {\r\n                    day.checked = false;\r\n                    if (day.short === getShortDate) {\r\n                        day.checked = true;\r\n                    }\r\n                });\r\n\r\n            }\r\n            $scope.showDaySelection = true;\r\n        }\r\n        $scope.changed = function() {\r\n            console.log('Time changed to: ' + $scope.mytime);\r\n        };\r\n        $scope.closeDay = function() {\r\n            $scope.showDaySelection = false;\r\n        }\r\n        $scope.getAlarms = function() {\r\n            var notificArr  = [];\r\n            var sound = device.platform == 'Android' ? 'file://sound.mp3' : 'file://beep.caf';\r\n            if (angular.isDefined($scope.$storage.alarms)) {\r\n                $scope.getremind = $scope.$storage.alarms;\r\n                angular.forEach($scope.getremind,function(getDate,index){\r\n                    var now = new Date(getDate.alarm.alarmTime).getTime();\r\n                    var _1_sec_late = new Date(now + 1 * 1000);\r\n                    var getObj = {\r\n                        id: index+1,\r\n                        title: 'Hi',\r\n                        text: 'It is your Ryzodeg Time',\r\n                        at: _1_sec_late,\r\n                        sound: sound\r\n                    };\r\n                    notificArr.push(getObj);\r\n                });\r\n                cordova.plugins.notification.local.schedule(notificArr);\r\n            }\r\n        };\r\n        $scope.deleteAlarm = function(array,item){\r\n            const indexItem = $scope.getremind.indexOf(item);\r\n            $scope.getremind.splice(indexItem, 1);\r\n            cordova.plugins.notification.local.cancel([indexItem], callback);\r\n            console.log($scope.getremind);\r\n        };\r\n        callback = function () {\r\n            console.log('hi');\r\n        };\r\n        $scope.toggleMode = function() {\r\n            $scope.ismeridian = !$scope.ismeridian;\r\n        };\r\n\r\n        $scope.clear = function() {\r\n            $scope.mytime = null;\r\n        };\r\n        $scope.makeTrue = function(item) {\r\n            if (!item.checked) {\r\n                item.checked = true;\r\n            } else {\r\n                item.checked = false;\r\n            }\r\n\r\n        }\r\n        $scope.alarmSet = function(time) {\r\n            $scope.remindSubmitBtn = \"Loading..\";\r\n            $scope.setAlarm = [];\r\n            var alarmDay = [];\r\n            var getHours = new Date(time).getHours();\r\n            var getMin = new Date(time).getMinutes();\r\n            angular.forEach($scope.daysList, function(data) {\r\n                if (data.checked) {\r\n                    alarmDay.push(data);\r\n                }\r\n            });\r\n            var alarmdata = {\r\n                alarm: {\r\n                    alarmTime: time,\r\n                    alarmHours: getHours,\r\n                    alarmMin: getMin,\r\n                    alarmPeriod: (getHours >= 12) ? \"PM\" : \"AM\",\r\n                    alarmDays: alarmDay\r\n                }\r\n            };\r\n\r\n            if (angular.isUndefined($scope.$storage.alarms)) {\r\n                $scope.setAlarm.push(alarmdata);\r\n                $scope.$storage.alarms = $scope.setAlarm;\r\n\r\n            } else {\r\n                $scope.$storage.alarms.push(alarmdata);\r\n            }\r\n            $scope.remindSubmitBtn = \"Alarm has beed added\";\r\n            $scope.getAlarms();\r\n            $timeout(function() {\r\n                $scope.closeDay();\r\n                $scope.remindSubmitBtn = \"Submit\";\r\n            }, 500);\r\n        }\r\n        $('body').on('click', '.tabs li a', function(e) {\r\n            var getId = $(this).parents('li').attr('id');\r\n            $('.tabs li').removeClass('active');\r\n            $(this).parents('li').addClass('active');\r\n            $('.tab_container > div').removeClass('active');\r\n            $('.tab_container').find('.' + getId).addClass('active');\r\n            e.preventDefault();\r\n        });\r\n        $('body').on('click', '.time button.moveDate', function() {\r\n            $('.tabs li#days a').trigger('click');\r\n        });\r\n    }\r\n    /*---------------------------------------------------------------------------*/\r\n    $('.selectGoalTyp > span').on('click', function() {\r\n        $('.pagePedometer').addClass('active');\r\n    });\r\n    $(\".goalOverlay\").on('click', function() {\r\n        $('.pagePedometer').removeClass('active');\r\n    });\r\n    $(\".goalValues ul li input\").on('click', function() {\r\n        var getValue = $(this).siblings('a').html();\r\n\r\n        if (getValue == 'Time/Duration') {\r\n            $(\"h-number\").removeAttr('style');\r\n            $(\"#Time_Duration\").css({ 'display': \"block\" });\r\n        } else {\r\n            $(\"h-number\").removeAttr('style');\r\n            $(\"#\" + getValue).css({ 'display': \"block\" });\r\n        }\r\n        $('.goalValues input').not(this).prop('checked', false);\r\n        $('.selectGoalTyp span').html($(this).val());\r\n    });\r\n\r\n    var start = new Date().getTime();\r\n    $scope.$on('htmlRendered', function(event, data) {\r\n        //var end = new Date().getTime();\r\n        //var time = end - start;       \r\n        //console.log(time);\r\n        $timeout(function() {\r\n            $scope.isRendered = true;\r\n        }, 0);\r\n    });\r\n}]);\r\npageModule.directive('myMenu', function() {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/pages/directive_menu.html'\r\n    };\r\n});\r\npageModule.directive('compileTemplate', function($compile, $parse) {\r\n    return {\r\n        link: function(scope, element, attr) {\r\n            var parsed = $parse(attr.ngBindHtml);\r\n\r\n            function getStringValue() { return (parsed(scope) || '').toString(); }\r\n\r\n            //Recompile if the template changes\r\n            scope.$watch(getStringValue, function() {\r\n                $compile(element, null, -9999)(scope); //The -9999 makes it skip directives so that we do not recompile ourselves\r\n            });\r\n        }\r\n    }\r\n});\r\npageModule.directive('a', function() {\r\n    return {\r\n        restrict: 'E',\r\n        link: function(scope, elem, attrs) {\r\n            if (attrs.ngClick || attrs.href === '' || attrs.href === '#') {\r\n                elem.on('click', function(e) {\r\n                    e.preventDefault();\r\n                });\r\n            }\r\n        }\r\n    };\r\n});","var videoModule = angular.module('videoModule', ['ngRoute']);\r\n\tvideoModule.config(['$routeProvider', '$locationProvider', function($routeProvider, $locationProvider) {\r\n\t\t\t$routeProvider.\r\n\t\t\twhen('/home_videos/:name', {\r\n\t\t\t\ttitle: 'Videos',\r\n\t\t\t\ttemplateUrl: 'app/pages/videos.html',\r\n\t\t\t\tcontroller: 'VideoController'\r\n\t\t  \t});\r\n\t\t}\r\n\t]);\r\n\tvideoModule.controller('VideoController',['$scope', '$location', '$routeParams', function ($scope, $location, $routeParams) {\r\n\t\t$scope.video = 'videos/'+$routeParams.name+'.mp4';\r\n\t}]);","\"use strict\";\r\nvar novomixApp = angular.module('novomixApp', ['ngRoute', 'ngProgress', 'userModule', 'pageModule', 'videoModule', 'ngStorage']);\r\n//$locationProvider.html5Mode(true).hashPrefix('!');\r\nnovomixApp.config(['$httpProvider', function($httpProvider) {\r\n    $httpProvider.interceptors.push('authHttpResponseInterceptor');\r\n}]);\r\nnovomixApp.factory('authHttpResponseInterceptor', ['$q', '$location', '$rootScope', function($q, $location, $rootScope) {\r\n    return {\r\n        response: function(response) {\r\n            if (response.status === 401) {\r\n                console.log(\"Response 401\");\r\n            }\r\n            return response || $q.when(response);\r\n        },\r\n        responseError: function(rejection) {\r\n            if (rejection.status === 401) {\r\n                $location.path('/401');\r\n            } else if (rejection.status === 400) {\r\n                $location.path('/400');\r\n            } else if (rejection.status >= 500) {\r\n                $location.path('/500');\r\n            }\r\n            return $q.reject(rejection);\r\n        }\r\n    }\r\n}]);\r\n/*check the local session*/\r\nnovomixApp.run(['$rootScope', '$location', '$localStorage', function($rootScope, $location, $localStorage) {\r\n    $rootScope.$storage = $localStorage;\r\n    if ($rootScope.$storage.isLoggedIn) {\r\n        $rootScope.isLoggedIn = true;\r\n        if($rootScope.$storage.user){\r\n           $location.path('/menu'); \r\n        }else{\r\n            $location.path('/login');\r\n        }\r\n        \r\n    } else {\r\n        $rootScope.isLoggedIn = false;\r\n        if($rootScope.$storage.lang){\r\n            $location.path('/login');\r\n        }else{\r\n          $location.path('/language');  \r\n        }\r\n        \r\n    }\r\n}]);\r\n\r\nnovomixApp.filter('unsafe', ['$sce', function($sce) {\r\n    return $sce.trustAsHtml;\r\n}]);\r\n\r\n//use route change event to get active page\r\nnovomixApp.run(['$location', '$rootScope','ngProgressFactory', function($location, $rootScope,ngProgressFactory) {\r\n    $rootScope.progressbar = ngProgressFactory.createInstance();\r\n    $rootScope.title = '';\r\n    $rootScope.$on('$routeChangeSuccess', function(event, current, previous) {\r\n        if(angular.isDefined(current.$$route)){\r\n            $rootScope.title = current.$$route.title;\r\n        }\r\n        \r\n        $rootScope.isActive = function(path) {\r\n            return ($location.path().substr(0, path.length) === path) ? true : false;\r\n        }\r\n        $rootScope.progressbar.complete();\r\n    });\r\n    $rootScope.$on('$routeChangeStart', function() {\r\n        $rootScope.progressbar.start();\r\n    });\r\n    $rootScope.$on('$routeChangeError', function() {\r\n        $rootScope.progressbar.reset();\r\n    });\r\n}]);\r\nnovomixApp.factory('LanguageService', ['$http', function($http) {\r\n    var getData = function() {\r\n        return $http.get('json/languages.json').then(function(result) {\r\n            return result;\r\n        });\r\n    };\r\n    return { getData: getData };\r\n}]);\r\nnovomixApp.factory('ContentService', ['$http', function($http) {\r\n    var getData = function(lang) {\r\n        var lang = lang || 'eng';\r\n        return $http.get('json/' + lang + '.json').then(function(result) {\r\n            return result;\r\n        });\r\n    };\r\n    return { getData: getData };\r\n}]);\r\nnovomixApp.directive('backButton', ['$window', function($window) {\r\n    return {\r\n        restrict: 'A',\r\n        link: function(scope, elem, attrs) {\r\n            elem.bind('click', function() {\r\n                $window.history.back();\r\n            });\r\n        }\r\n    };\r\n}]);\r\nvar app = {\r\n    // Application Constructor\r\n    initialize: function() {\r\n        angular.element(document).ready(function() {\r\n            angular.bootstrap(document, ['novomixApp']);\r\n        });\r\n        this.bindEvents();\r\n    },\r\n    // Bind Event Listeners\r\n    //\r\n    // Bind any events that are required on startup. Common events are:\r\n    // 'load', 'deviceready', 'offline', and 'online'.\r\n    bindEvents: function() {\r\n        document.addEventListener('deviceready', this.onDeviceReady, false);\r\n    },\r\n    // deviceready Event Handler\r\n    //\r\n    // The scope of 'this' is the event. In order to call the 'receivedEvent'\r\n    // function, we must explicitly call 'app.receivedEvent(...);'\r\n    onDeviceReady: function() {\r\n        app.receivedEvent('deviceready');\r\n        setTimeout(function() {\r\n            navigator.splashscreen.hide();\r\n        }, 2000);\r\n\r\n        // Permission Check\r\n        var permissions = cordova.plugins.permissions;\r\n        var list = [\r\n            permissions.ACCESS_COARSE_LOCATION,\r\n            permissions.ACCESS_FINE_LOCATION\r\n        ];\r\n        permissions.hasPermission(list, function( status ){\r\n          if (!status) {\r\n           permissions.requestPermission(list, success, error);\r\n          }\r\n        });\r\n\r\n        function error() {\r\n          console.warn('Camera permission is not turned on');\r\n        }\r\n\r\n        function success( status ) {\r\n          if( !status.hasPermission ) error();\r\n        }\r\n\r\n        cordova.plugins.backgroundMode.setEnabled(false);\r\n        cordova.plugins.notification.local.on(\"click\", function (notification) {\r\n            joinMeeting(notification.data.meetingId);\r\n        });\r\n\r\n        \r\n\r\n        /*-----------------------Device BackButton -------------------*/\r\n\r\n        document.addEventListener(\"backbutton\", function(e) {\r\n            if (window.location.hash == '#/menu' || window.location.hash == '#/home') {\r\n                e.preventDefault();\r\n                navigator.app.exitApp();\r\n            } else {\r\n                navigator.app.backHistory();\r\n            }\r\n            cordova.plugins.backgroundMode.overrideBackButton();\r\n            cordova.plugins.backgroundMode.on('activate', function(data) {\r\n                if (data === null) {\r\n                    cordova.plugins.backgroundMode.setEnabled(true);\r\n                }\r\n                alert(data);\r\n            });\r\n            cordova.plugins.backgroundMode.on('deactivate', function(data) {\r\n                if (data === null) {\r\n                    cordova.plugins.backgroundMode.setEnabled(true);\r\n                }\r\n                alert(data);\r\n            });\r\n        }, false);\r\n\r\n        /*------------------------------------------------------------------*/\r\n    },\r\n    // Update DOM on a Received Event\r\n    receivedEvent: function(id) {\r\n\r\n\r\n    }\r\n};\r\napp.initialize();"]}